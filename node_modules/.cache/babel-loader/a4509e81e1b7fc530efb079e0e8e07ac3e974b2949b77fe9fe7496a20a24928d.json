{"ast":null,"code":"import React,{useState}from'react';import'../styles/Chatbot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=_ref=>{let{onSave}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[extractedInfo,setExtractedInfo]=useState(null);const handleSubmit=e=>{e.preventDefault();if(!inputMessage.trim())return;// 사용자 메시지 추가\nconst newMessages=[...messages,{text:inputMessage,type:'user'}];setMessages(newMessages);// 과제 정보 추출 시도\nconst extracted=extractAssignmentInfo(inputMessage);if(extracted.title!=='알 수 없음'||extracted.deadline!=='알 수 없음'){setExtractedInfo(extracted);}// 봇 응답 추가\nsetTimeout(()=>{setMessages([...newMessages,{text:'과제 정보를 분석했습니다. 추출된 정보를 확인해 주세요.',type:'bot'}]);},500);setInputMessage('');};const handleSaveToCalendar=()=>{if(!extractedInfo)return;const deadlineDate=parseDeadlineDate(extractedInfo.deadline);if(!deadlineDate){alert('마감일 형식이 올바르지 않습니다.');return;}const eventData={title:extractedInfo.title,type:'assignment',date:deadlineDate,time:'23:59',endTime:'23:59',description:\"\\uBC30\\uC810: \".concat(extractedInfo.points,\"\\n\\uC81C\\uCD9C\\uC7A5\\uC18C: \").concat(extractedInfo.location),priority:'high',color:'#FF5733'// 기본 과제 색상\n};onSave(eventData);setMessages([...messages,{text:'일정이 캘린더에 저장되었습니다.',type:'bot'}]);setExtractedInfo(null);};const handleEditAndSave=()=>{if(!extractedInfo)return;const deadlineDate=parseDeadlineDate(extractedInfo.deadline);if(!deadlineDate){alert('마감일 형식이 올바르지 않습니다.');return;}const eventData={title:extractedInfo.title,type:'assignment',date:deadlineDate,time:'23:59',endTime:'23:59',description:\"\\uBC30\\uC810: \".concat(extractedInfo.points,\"\\n\\uC81C\\uCD9C\\uC7A5\\uC18C: \").concat(extractedInfo.location),priority:'high',color:'#FF5733'// 기본 과제 색상\n};onSave(eventData);setMessages([...messages,{text:'일정이 캘린더에 저장되었습니다.',type:'bot'}]);setExtractedInfo(null);};const parseDeadlineDate=deadlineStr=>{if(!deadlineStr||deadlineStr==='알 수 없음')return null;// 다양한 날짜 형식 처리\nconst patterns=[{regex:/(\\d{4})[-\\/년]\\s*(\\d{1,2})[-\\/월]\\s*(\\d{1,2})일?/,handler:matches=>new Date(matches[1],matches[2]-1,matches[3])},{regex:/(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})/,handler:matches=>new Date(matches[3],matches[1]-1,matches[2])},{regex:/(\\d{1,2})월\\s*(\\d{1,2})일/,handler:matches=>{const now=new Date();return new Date(now.getFullYear(),matches[1]-1,matches[2]);}}];for(const{regex,handler}of patterns){const matches=deadlineStr.match(regex);if(matches){return handler(matches);}}return null;};const extractAssignmentInfo=text=>{const extracted={title:'알 수 없음',deadline:'알 수 없음',points:'알 수 없음',location:'알 수 없음'};// 제목 추출\nconst titlePatterns=[/과제[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,/제목[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,/[\\[<【](.+?)[\\]>】]/,/^(.+?)(?=과제|assignment|homework)/i];for(const pattern of titlePatterns){const match=text.match(pattern);if(match&&match[1]){extracted.title=match[1].trim();break;}}// 마감일 추출\nconst deadlinePatterns=[/마감일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,/제출일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,/기한[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,/(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)까지/i,/(\\d{1,2}\\/\\d{1,2}\\/?\\d{0,4})/,/(\\d{1,2}월\\s*\\d{1,2}일)/];for(const pattern of deadlinePatterns){const match=text.match(pattern);if(match&&match[1]){extracted.deadline=match[1].trim();break;}}// 배점 추출\nconst pointsPatterns=[/배점[\\s]*[:：]\\s*(\\d+)\\s*점/i,/점수[\\s]*[:：]\\s*(\\d+)\\s*점/i,/(\\d+)\\s*점\\s*만점/i,/(\\d+)\\s*점/i];for(const pattern of pointsPatterns){const match=text.match(pattern);if(match&&match[1]){extracted.points=match[1]+'점';break;}}// 제출 장소 추출\nconst locationPatterns=[/제출[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,/제출처[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,/제출장소[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i];for(const pattern of locationPatterns){const match=text.match(pattern);if(match&&match[1]){extracted.location=match[1].trim();break;}}return extracted;};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.type),children:message.text},index))}),extractedInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"extracted-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uCD94\\uCD9C\\uB41C \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uACFC\\uC81C\\uBA85:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uB9C8\\uAC10\\uC77C:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.deadline})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uBC30\\uC810:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.points})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC81C\\uCD9C\\uC7A5\\uC18C:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.location})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"extracted-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"save-extracted-button\",onClick:handleSaveToCalendar,children:\"\\uCE98\\uB9B0\\uB354\\uC5D0 \\uC800\\uC7A5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-extracted-button\",onClick:handleEditAndSave,children:\"\\uC218\\uC815 \\uD6C4 \\uC800\\uC7A5\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat-input\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),placeholder:\"\\uACFC\\uC81C \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uC804\\uC1A1\"})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Chatbot","_ref","onSave","messages","setMessages","inputMessage","setInputMessage","extractedInfo","setExtractedInfo","handleSubmit","e","preventDefault","trim","newMessages","text","type","extracted","extractAssignmentInfo","title","deadline","setTimeout","handleSaveToCalendar","deadlineDate","parseDeadlineDate","alert","eventData","date","time","endTime","description","concat","points","location","priority","color","handleEditAndSave","deadlineStr","patterns","regex","handler","matches","Date","now","getFullYear","match","titlePatterns","pattern","deadlinePatterns","pointsPatterns","locationPatterns","className","children","map","message","index","onClick","onSubmit","value","onChange","target","placeholder"],"sources":["C:/Users/hwfre/OneDrive/Desktop/고멀제/tlqnstjf06010014/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Chatbot.css';\r\n\r\nconst Chatbot = ({ onSave }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [extractedInfo, setExtractedInfo] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim()) return;\r\n\r\n    // 사용자 메시지 추가\r\n    const newMessages = [...messages, { text: inputMessage, type: 'user' }];\r\n    setMessages(newMessages);\r\n\r\n    // 과제 정보 추출 시도\r\n    const extracted = extractAssignmentInfo(inputMessage);\r\n    if (extracted.title !== '알 수 없음' || extracted.deadline !== '알 수 없음') {\r\n      setExtractedInfo(extracted);\r\n    }\r\n\r\n    // 봇 응답 추가\r\n    setTimeout(() => {\r\n      setMessages([...newMessages, {\r\n        text: '과제 정보를 분석했습니다. 추출된 정보를 확인해 주세요.',\r\n        type: 'bot'\r\n      }]);\r\n    }, 500);\r\n\r\n    setInputMessage('');\r\n  };\r\n\r\n  const handleSaveToCalendar = () => {\r\n    if (!extractedInfo) return;\r\n\r\n    const deadlineDate = parseDeadlineDate(extractedInfo.deadline);\r\n    if (!deadlineDate) {\r\n      alert('마감일 형식이 올바르지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    const eventData = {\r\n      title: extractedInfo.title,\r\n      type: 'assignment',\r\n      date: deadlineDate,\r\n      time: '23:59',\r\n      endTime: '23:59',\r\n      description: `배점: ${extractedInfo.points}\\n제출장소: ${extractedInfo.location}`,\r\n      priority: 'high',\r\n      color: '#FF5733' // 기본 과제 색상\r\n    };\r\n\r\n    onSave(eventData);\r\n    setMessages([...messages, {\r\n      text: '일정이 캘린더에 저장되었습니다.',\r\n      type: 'bot'\r\n    }]);\r\n    setExtractedInfo(null);\r\n  };\r\n\r\n  const handleEditAndSave = () => {\r\n    if (!extractedInfo) return;\r\n\r\n    const deadlineDate = parseDeadlineDate(extractedInfo.deadline);\r\n    if (!deadlineDate) {\r\n      alert('마감일 형식이 올바르지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    const eventData = {\r\n      title: extractedInfo.title,\r\n      type: 'assignment',\r\n      date: deadlineDate,\r\n      time: '23:59',\r\n      endTime: '23:59',\r\n      description: `배점: ${extractedInfo.points}\\n제출장소: ${extractedInfo.location}`,\r\n      priority: 'high',\r\n      color: '#FF5733' // 기본 과제 색상\r\n    };\r\n\r\n    onSave(eventData);\r\n    setMessages([...messages, {\r\n      text: '일정이 캘린더에 저장되었습니다.',\r\n      type: 'bot'\r\n    }]);\r\n    setExtractedInfo(null);\r\n  };\r\n\r\n  const parseDeadlineDate = (deadlineStr) => {\r\n    if (!deadlineStr || deadlineStr === '알 수 없음') return null;\r\n\r\n    // 다양한 날짜 형식 처리\r\n    const patterns = [\r\n      {\r\n        regex: /(\\d{4})[-\\/년]\\s*(\\d{1,2})[-\\/월]\\s*(\\d{1,2})일?/,\r\n        handler: (matches) => new Date(matches[1], matches[2] - 1, matches[3])\r\n      },\r\n      {\r\n        regex: /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})/,\r\n        handler: (matches) => new Date(matches[3], matches[1] - 1, matches[2])\r\n      },\r\n      {\r\n        regex: /(\\d{1,2})월\\s*(\\d{1,2})일/,\r\n        handler: (matches) => {\r\n          const now = new Date();\r\n          return new Date(now.getFullYear(), matches[1] - 1, matches[2]);\r\n        }\r\n      }\r\n    ];\r\n\r\n    for (const { regex, handler } of patterns) {\r\n      const matches = deadlineStr.match(regex);\r\n      if (matches) {\r\n        return handler(matches);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const extractAssignmentInfo = (text) => {\r\n    const extracted = {\r\n      title: '알 수 없음',\r\n      deadline: '알 수 없음',\r\n      points: '알 수 없음',\r\n      location: '알 수 없음'\r\n    };\r\n\r\n    // 제목 추출\r\n    const titlePatterns = [\r\n      /과제[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,\r\n      /제목[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,\r\n      /[\\[<【](.+?)[\\]>】]/,\r\n      /^(.+?)(?=과제|assignment|homework)/i\r\n    ];\r\n\r\n    for (const pattern of titlePatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.title = match[1].trim();\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 마감일 추출\r\n    const deadlinePatterns = [\r\n      /마감일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,\r\n      /제출일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,\r\n      /기한[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,\r\n      /(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)까지/i,\r\n      /(\\d{1,2}\\/\\d{1,2}\\/?\\d{0,4})/,\r\n      /(\\d{1,2}월\\s*\\d{1,2}일)/\r\n    ];\r\n\r\n    for (const pattern of deadlinePatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.deadline = match[1].trim();\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 배점 추출\r\n    const pointsPatterns = [\r\n      /배점[\\s]*[:：]\\s*(\\d+)\\s*점/i,\r\n      /점수[\\s]*[:：]\\s*(\\d+)\\s*점/i,\r\n      /(\\d+)\\s*점\\s*만점/i,\r\n      /(\\d+)\\s*점/i\r\n    ];\r\n\r\n    for (const pattern of pointsPatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.points = match[1] + '점';\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 제출 장소 추출\r\n    const locationPatterns = [\r\n      /제출[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,\r\n      /제출처[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,\r\n      /제출장소[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i\r\n    ];\r\n\r\n    for (const pattern of locationPatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.location = match[1].trim();\r\n        break;\r\n      }\r\n    }\r\n\r\n    return extracted;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.type}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {extractedInfo && (\r\n        <div className=\"extracted-info\">\r\n          <h4>추출된 정보</h4>\r\n          <div className=\"info-grid\">\r\n            <div className=\"info-item\">\r\n              <label>과제명:</label>\r\n              <span>{extractedInfo.title}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>마감일:</label>\r\n              <span>{extractedInfo.deadline}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>배점:</label>\r\n              <span>{extractedInfo.points}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>제출장소:</label>\r\n              <span>{extractedInfo.location}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"extracted-actions\">\r\n            <button \r\n              className=\"save-extracted-button\"\r\n              onClick={handleSaveToCalendar}\r\n            >\r\n              캘린더에 저장\r\n            </button>\r\n            <button \r\n              className=\"edit-extracted-button\"\r\n              onClick={handleEditAndSave}\r\n            >\r\n              수정 후 저장\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <form className=\"chat-input\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          placeholder=\"과제 정보를 입력하세요...\"\r\n        />\r\n        <button type=\"submit\">전송</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}